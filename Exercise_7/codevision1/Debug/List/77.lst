
AVRASM ver. 2.1.30  C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm Tue Dec 07 03:45:56 2021

C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _id=R4
                 	.DEF _id_msb=R5
                 	.DEF _p=R6
                 	.DEF _p_msb=R7
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 	.DEF _s=R10
                 	.DEF _s_msb=R11
                 	.DEF _m=R12
                 	.DEF _m_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0068 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0017
000034 0029      	.DB  0x17,0x0,0x29,0x0
                 
                 _0x3:
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1139): warning: .cseg .db misalignment - padding zero byte
000035 0012      	.DB  0x12
                 _0x4:
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1141): warning: .cseg .db misalignment - padding zero byte
000036 0082      	.DB  0x82
                 _0x0:
000037 4449
000038 003a
000039 5750
00003a 003a      	.DB  0x49,0x44,0x3A,0x0,0x50,0x57,0x3A,0x0
00003b 6425
00003c 2500
00003d 3a64
00003e 6425      	.DB  0x25,0x64,0x0,0x25,0x64,0x3A,0x25,0x64
00003f 253a
000040 0064
000041 7072
000042 3a6d      	.DB  0x3A,0x25,0x64,0x0,0x72,0x70,0x6D,0x3A
000043 6425
000044 6500
000045 7272
000046 726f      	.DB  0x25,0x64,0x0,0x65,0x72,0x72,0x6F,0x72
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1147): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 _0x2000060:
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1149): warning: .cseg .db misalignment - padding zero byte
000048 0001      	.DB  0x1
                 _0x2000000:
000049 4e2d
00004a 4e41
00004b 4900
00004c 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Ali\Desktop\New folder (2)\c\codevision1\Debug\List\77.asm(1152): warning: .cseg .db misalignment - padding zero byte
00004d 0000      	.DB  0x0
                 _0x2040003:
00004e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00004f 0004      	.DW  0x04
000050 000a      	.DW  0x0A
000051 0066      	.DW  __REG_VARS*2
                 
000052 0001      	.DW  0x01
000053 016e      	.DW  _h
000054 006a      	.DW  _0x3*2
                 
000055 0001      	.DW  0x01
000056 0170      	.DW  _motor
000057 006c      	.DW  _0x4*2
                 
000058 0004      	.DW  0x04
000059 0160      	.DW  _0x3E
00005a 006e      	.DW  _0x0*2
                 
00005b 0004      	.DW  0x04
00005c 0164      	.DW  _0x3E+4
00005d 0072      	.DW  _0x0*2+4
                 
00005e 0006      	.DW  0x06
00005f 0168      	.DW  _0x3E+8
000060 0089      	.DW  _0x0*2+27
                 
000061 0001      	.DW  0x01
000062 0191      	.DW  __seed_G100
000063 0090      	.DW  _0x2000060*2
                 
000064 0002      	.DW  0x02
000065 0195      	.DW  __base_y_G102
000066 009c      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
000067 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000068 94f8      	CLI
000069 27ee      	CLR  R30
00006a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006b e0f1      	LDI  R31,1
00006c bffb      	OUT  GICR,R31
00006d bfeb      	OUT  GICR,R30
00006e bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00006f e08d      	LDI  R24,(14-2)+1
000070 e0a2      	LDI  R26,2
000071 27bb      	CLR  R27
                 __CLEAR_REG:
000072 93ed      	ST   X+,R30
000073 958a      	DEC  R24
000074 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000075 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000076 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000077 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000078 93ed      	ST   X+,R30
000079 9701      	SBIW R24,1
00007a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00007b e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00007c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00007d 9185      	LPM  R24,Z+
00007e 9195      	LPM  R25,Z+
00007f 9700      	SBIW R24,0
000080 f061      	BREQ __GLOBAL_INI_END
000081 91a5      	LPM  R26,Z+
000082 91b5      	LPM  R27,Z+
000083 9005      	LPM  R0,Z+
000084 9015      	LPM  R1,Z+
000085 01bf      	MOVW R22,R30
000086 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000087 9005      	LPM  R0,Z+
000088 920d      	ST   X+,R0
000089 9701      	SBIW R24,1
00008a f7e1      	BRNE __GLOBAL_INI_LOOP
00008b 01fb      	MOVW R30,R22
00008c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00008d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008e bfed      	OUT  SPL,R30
00008f e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000090 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000091 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000092 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000093 940c 00e1 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;  int id,p,i,s=23,m=41,h=18,motor=130;
                 
                 	.DSEG
                 ;unsigned char key ;
                 ;unsigned char x[4],y[4],h1[1],w1[1],wa[10],mo[5],temp[5];
                 ;
                 ;unsigned char key_pad(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _key_pad:
                 ; .FSTART _key_pad
                 ; 0000 000D PORTC.4=0;PORTC.5=1;PORTC.6=1;PORTC.7=1;
000095 98ac      	CBI  0x15,4
000096 9aad      	SBI  0x15,5
000097 9aae      	SBI  0x15,6
000098 9aaf      	SBI  0x15,7
                 ; 0000 000E if(!PINC.0) return 'K';if(!PINC.1) return '9';
000099 9b98      	SBIS 0x13,0
00009a c036      	RJMP _0x20C0003
00009b 9999      	SBIC 0x13,1
00009c c002      	RJMP _0xE
00009d e3e9      	LDI  R30,LOW(57)
00009e 9508      	RET
                 ; 0000 000F if(!PINC.2) return '8';if(!PINC.3) return '7';
                 _0xE:
00009f 999a      	SBIC 0x13,2
0000a0 c002      	RJMP _0xF
0000a1 e3e8      	LDI  R30,LOW(56)
0000a2 9508      	RET
                 _0xF:
0000a3 999b      	SBIC 0x13,3
0000a4 c002      	RJMP _0x10
0000a5 e3e7      	LDI  R30,LOW(55)
0000a6 9508      	RET
                 ; 0000 0010 PORTC.4=1;PORTC.5=0;PORTC.6=1;PORTC.7=1;
                 _0x10:
0000a7 9aac      	SBI  0x15,4
0000a8 98ad      	CBI  0x15,5
0000a9 9aae      	SBI  0x15,6
0000aa 9aaf      	SBI  0x15,7
                 ; 0000 0011 if(!PINC.0) return 'K';if(!PINC.1) return '6';
0000ab 9b98      	SBIS 0x13,0
0000ac c024      	RJMP _0x20C0003
0000ad 9999      	SBIC 0x13,1
0000ae c002      	RJMP _0x1A
0000af e3e6      	LDI  R30,LOW(54)
0000b0 9508      	RET
                 ; 0000 0012 if(!PINC.2) return '5';if(!PINC.3) return '4';
                 _0x1A:
0000b1 999a      	SBIC 0x13,2
0000b2 c002      	RJMP _0x1B
0000b3 e3e5      	LDI  R30,LOW(53)
0000b4 9508      	RET
                 _0x1B:
0000b5 999b      	SBIC 0x13,3
0000b6 c002      	RJMP _0x1C
0000b7 e3e4      	LDI  R30,LOW(52)
0000b8 9508      	RET
                 ; 0000 0013 PORTC.4=1;PORTC.5=1;PORTC.6=0;PORTC.7=1;
                 _0x1C:
0000b9 9aac      	SBI  0x15,4
0000ba 9aad      	SBI  0x15,5
0000bb 98ae      	CBI  0x15,6
0000bc 9aaf      	SBI  0x15,7
                 ; 0000 0014 if(!PINC.0) return 'K';if(!PINC.1) return '3';
0000bd 9b98      	SBIS 0x13,0
0000be c012      	RJMP _0x20C0003
0000bf 9999      	SBIC 0x13,1
0000c0 c002      	RJMP _0x26
0000c1 e3e3      	LDI  R30,LOW(51)
0000c2 9508      	RET
                 ; 0000 0015 if(!PINC.2) return '2';if(!PINC.3) return '1';
                 _0x26:
0000c3 999a      	SBIC 0x13,2
0000c4 c002      	RJMP _0x27
0000c5 e3e2      	LDI  R30,LOW(50)
0000c6 9508      	RET
                 _0x27:
0000c7 999b      	SBIC 0x13,3
0000c8 c002      	RJMP _0x28
0000c9 e3e1      	LDI  R30,LOW(49)
0000ca 9508      	RET
                 ; 0000 0016 PORTD.4=1;PORTC.5=1;PORTC.6=1;PORTC.7=0;
                 _0x28:
0000cb 9a94      	SBI  0x12,4
0000cc 9aad      	SBI  0x15,5
0000cd 9aae      	SBI  0x15,6
0000ce 98af      	CBI  0x15,7
                 ; 0000 0017 if(!PINC.0) return 'K';if(!PINC.1) return '=';
0000cf 9998      	SBIC 0x13,0
0000d0 c002      	RJMP _0x31
                 _0x20C0003:
0000d1 e4eb      	LDI  R30,LOW(75)
0000d2 9508      	RET
                 _0x31:
0000d3 9999      	SBIC 0x13,1
0000d4 c002      	RJMP _0x32
0000d5 e3ed      	LDI  R30,LOW(61)
0000d6 9508      	RET
                 ; 0000 0018 if(!PINC.2) return '0';if(!PINC.3) return 'E';
                 _0x32:
0000d7 999a      	SBIC 0x13,2
0000d8 c002      	RJMP _0x33
0000d9 e3e0      	LDI  R30,LOW(48)
0000da 9508      	RET
                 _0x33:
0000db 999b      	SBIC 0x13,3
0000dc c002      	RJMP _0x34
0000dd e4e5      	LDI  R30,LOW(69)
0000de 9508      	RET
                 ; 0000 0019 return 'N';
                 _0x34:
0000df e4ee      	LDI  R30,LOW(78)
0000e0 9508      	RET
                 ; 0000 001A }
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001E {
                 _main:
                 ; .FSTART _main
                 ; 0000 001F 
                 ; 0000 0020 DDRC=0xF0;
0000e1 efe0      	LDI  R30,LOW(240)
0000e2 bbe4      	OUT  0x14,R30
                 ; 0000 0021 PORTC=0x0F;
0000e3 e0ef      	LDI  R30,LOW(15)
0000e4 bbe5      	OUT  0x15,R30
                 ; 0000 0022 
                 ; 0000 0023 DDRB=0x03;
0000e5 e0e3      	LDI  R30,LOW(3)
0000e6 bbe7      	OUT  0x17,R30
                 ; 0000 0024 PORTB=0x00;
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 bbe8      	OUT  0x18,R30
                 ; 0000 0025 PINB.2=1;
0000e9 9ab2      	SBI  0x16,2
                 ; 0000 0026 PINB.3=1;
0000ea 9ab3      	SBI  0x16,3
                 ; 0000 0027 PINB.4=1;
0000eb 9ab4      	SBI  0x16,4
                 ; 0000 0028 
                 ; 0000 0029 UCSRA=0x00;
0000ec b9eb      	OUT  0xB,R30
                 ; 0000 002A UCSRB=0x18;
0000ed e1e8      	LDI  R30,LOW(24)
0000ee b9ea      	OUT  0xA,R30
                 ; 0000 002B UCSRC=0x86;
0000ef e8e6      	LDI  R30,LOW(134)
0000f0 bde0      	OUT  0x20,R30
                 ; 0000 002C UBRRH=0x00;
0000f1 e0e0      	LDI  R30,LOW(0)
0000f2 bde0      	OUT  0x20,R30
                 ; 0000 002D UBRRL=0x33;
0000f3 e3e3      	LDI  R30,LOW(51)
0000f4 b9e9      	OUT  0x9,R30
                 ; 0000 002E 
                 ; 0000 002F lcd_init(16);
0000f5 e1a0      	LDI  R26,LOW(16)
0000f6 940e 0459 	CALL _lcd_init
                 ; 0000 0030 while (1)
                 _0x3B:
                 ; 0000 0031 {
                 ; 0000 0032            lcd_gotoxy(5,0);
0000f8 e0e5      	LDI  R30,LOW(5)
0000f9 940e 04b5 	CALL SUBOPT_0x0
                 ; 0000 0033            lcd_puts("ID:");
                +
0000fb e6a0     +LDI R26 , LOW ( _0x3E + ( 0 ) )
0000fc e0b1     +LDI R27 , HIGH ( _0x3E + ( 0 ) )
                 	__POINTW2MN _0x3E,0
0000fd 940e 0448 	CALL _lcd_puts
                 ; 0000 0034            lcd_gotoxy(5,1);
0000ff e0e5      	LDI  R30,LOW(5)
000100 940e 04b9 	CALL SUBOPT_0x1
                 ; 0000 0035            lcd_puts("PW:");
                +
000102 e6a4     +LDI R26 , LOW ( _0x3E + ( 4 ) )
000103 e0b1     +LDI R27 , HIGH ( _0x3E + ( 4 ) )
                 	__POINTW2MN _0x3E,4
000104 940e 04bd 	CALL SUBOPT_0x2
                 ; 0000 0036             key=key_pad();
                 ; 0000 0037             delay_ms(230);
                 ; 0000 0038 
                 ; 0000 0039                     while(key!='K'||(mo[4]=='0'))
                 _0x3F:
000106 91a0 0172 	LDS  R26,_key
000108 34ab      	CPI  R26,LOW(0x4B)
000109 f421      	BRNE _0x42
                +
00010a 91a0 018b+LDS R26 , _mo + ( 4 )
                 	__GETB2MN _mo,4
00010c 33a0      	CPI  R26,LOW(0x30)
00010d f541      	BRNE _0x41
                 _0x42:
                 ; 0000 003A            {
                 ; 0000 003B 
                 ; 0000 003C            while(key!='N')
                 _0x44:
00010e 91a0 0172 	LDS  R26,_key
000110 34ae      	CPI  R26,LOW(0x4E)
000111 f061      	BREQ _0x46
                 ; 0000 003D            {
                 ; 0000 003E 
                 ; 0000 003F                x[i]=key;
000112 01f4      	MOVW R30,R8
000113 58ed      	SUBI R30,LOW(-_x)
000114 4ffe      	SBCI R31,HIGH(-_x)
000115 83a0      	STD  Z+0,R26
                 ; 0000 0040                id=atoi(x);
000116 e7a3      	LDI  R26,LOW(_x)
000117 e0b1      	LDI  R27,HIGH(_x)
000118 940e 0210 	CALL _atoi
00011a 012f      	MOVW R4,R30
                 ; 0000 0041                i++;
00011b 940e 04c7 	CALL SUBOPT_0x3
                 ; 0000 0042               key='N';
                 ; 0000 0043              }
00011d cff0      	RJMP _0x44
                 _0x46:
                 ; 0000 0044 
                 ; 0000 0045 
                 ; 0000 0046            lcd_gotoxy(10,0);
00011e e0ea      	LDI  R30,LOW(10)
00011f 940e 04b5 	CALL SUBOPT_0x0
                 ; 0000 0047            sprintf(h1,"%d",id);
000121 e7eb      	LDI  R30,LOW(_h1)
000122 e0f1      	LDI  R31,HIGH(_h1)
000123 940e 04ce 	CALL SUBOPT_0x4
000125 01f2      	MOVW R30,R4
000126 940e 04d5 	CALL SUBOPT_0x5
                 ; 0000 0048            lcd_puts(h1);
000128 e7ab      	LDI  R26,LOW(_h1)
000129 e0b1      	LDI  R27,HIGH(_h1)
00012a 940e 04bd 	CALL SUBOPT_0x2
                 ; 0000 0049             key=key_pad();
                 ; 0000 004A             delay_ms(230);
                 ; 0000 004B            if(key=='=')
00012c 91a0 0172 	LDS  R26,_key
00012e 33ad      	CPI  R26,LOW(0x3D)
00012f f429      	BRNE _0x47
                 ; 0000 004C              {
                 ; 0000 004D             key='K';
000130 e4eb      	LDI  R30,LOW(75)
000131 93e0 0172 	STS  _key,R30
                 ; 0000 004E 
                 ; 0000 004F             i=0;
000133 2488      	CLR  R8
000134 2499      	CLR  R9
                 ; 0000 0050               }
                 ; 0000 0051 
                 ; 0000 0052           }
                 _0x47:
000135 cfd0      	RJMP _0x3F
                 _0x41:
                 ; 0000 0053 
                 ; 0000 0054 
                 ; 0000 0055            key='N';
000136 e4ee      	LDI  R30,LOW(78)
000137 93e0 0172 	STS  _key,R30
                 ; 0000 0056 
                 ; 0000 0057                      while(key!='K'||(mo[4]=='0'))
                 _0x48:
000139 91a0 0172 	LDS  R26,_key
00013b 34ab      	CPI  R26,LOW(0x4B)
00013c f421      	BRNE _0x4B
                +
00013d 91a0 018b+LDS R26 , _mo + ( 4 )
                 	__GETB2MN _mo,4
00013f 33a0      	CPI  R26,LOW(0x30)
000140 f541      	BRNE _0x4A
                 _0x4B:
                 ; 0000 0058            {
                 ; 0000 0059            while(key!='N')
                 _0x4D:
000141 91a0 0172 	LDS  R26,_key
000143 34ae      	CPI  R26,LOW(0x4E)
000144 f061      	BREQ _0x4F
                 ; 0000 005A            {
                 ; 0000 005B 
                 ; 0000 005C                y[i]=key;
000145 01f4      	MOVW R30,R8
000146 58e9      	SUBI R30,LOW(-_y)
000147 4ffe      	SBCI R31,HIGH(-_y)
000148 83a0      	STD  Z+0,R26
                 ; 0000 005D              p=atoi(y);
000149 e7a7      	LDI  R26,LOW(_y)
00014a e0b1      	LDI  R27,HIGH(_y)
00014b 940e 0210 	CALL _atoi
00014d 013f      	MOVW R6,R30
                 ; 0000 005E               i++;
00014e 940e 04c7 	CALL SUBOPT_0x3
                 ; 0000 005F               key='N';
                 ; 0000 0060              }
000150 cff0      	RJMP _0x4D
                 _0x4F:
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063            lcd_gotoxy(10,1);
000151 e0ea      	LDI  R30,LOW(10)
000152 940e 04b9 	CALL SUBOPT_0x1
                 ; 0000 0064            sprintf(w1,"%d",p);
000154 e7ec      	LDI  R30,LOW(_w1)
000155 e0f1      	LDI  R31,HIGH(_w1)
000156 940e 04ce 	CALL SUBOPT_0x4
000158 01f3      	MOVW R30,R6
000159 940e 04d5 	CALL SUBOPT_0x5
                 ; 0000 0065            lcd_puts(w1);
00015b e7ac      	LDI  R26,LOW(_w1)
00015c e0b1      	LDI  R27,HIGH(_w1)
00015d 940e 04bd 	CALL SUBOPT_0x2
                 ; 0000 0066            key=key_pad();
                 ; 0000 0067            delay_ms(230);
                 ; 0000 0068            if(key=='=')
00015f 91a0 0172 	LDS  R26,_key
000161 33ad      	CPI  R26,LOW(0x3D)
000162 f429      	BRNE _0x50
                 ; 0000 0069              {
                 ; 0000 006A             key='K';
000163 e4eb      	LDI  R30,LOW(75)
000164 93e0 0172 	STS  _key,R30
                 ; 0000 006B 
                 ; 0000 006C            i=0;
000166 2488      	CLR  R8
000167 2499      	CLR  R9
                 ; 0000 006D 
                 ; 0000 006E                }
                 ; 0000 006F           }
                 _0x50:
000168 cfd0      	RJMP _0x48
                 _0x4A:
                 ; 0000 0070 
                 ; 0000 0071           while((id==1)&&(p==3)||(mo[4]=='0'))
                 _0x51:
000169 e0e1      	LDI  R30,LOW(1)
00016a e0f0      	LDI  R31,HIGH(1)
00016b 15e4      	CP   R30,R4
00016c 05f5      	CPC  R31,R5
00016d f429      	BRNE _0x54
00016e e0e3      	LDI  R30,LOW(3)
00016f e0f0      	LDI  R31,HIGH(3)
000170 15e6      	CP   R30,R6
000171 05f7      	CPC  R31,R7
000172 f029      	BREQ _0x56
                 _0x54:
                +
000173 91a0 018b+LDS R26 , _mo + ( 4 )
                 	__GETB2MN _mo,4
000175 33a0      	CPI  R26,LOW(0x30)
000176 f009      	BREQ _0x56
000177 c07e      	RJMP _0x53
                 _0x56:
                 ; 0000 0072           {
                 ; 0000 0073 
                 ; 0000 0074            PORTB=0x01;
000178 e0e1      	LDI  R30,LOW(1)
000179 bbe8      	OUT  0x18,R30
                 ; 0000 0075            s++;
00017a 01f5      	MOVW R30,R10
00017b 9631      	ADIW R30,1
00017c 015f      	MOVW R10,R30
                 ; 0000 0076 
                 ; 0000 0077            if(s==59)
00017d e3eb      	LDI  R30,LOW(59)
00017e e0f0      	LDI  R31,HIGH(59)
00017f 15ea      	CP   R30,R10
000180 05fb      	CPC  R31,R11
000181 f4e9      	BRNE _0x58
                 ; 0000 0078            {
                 ; 0000 0079            m++;s=0;
000182 01f6      	MOVW R30,R12
000183 9631      	ADIW R30,1
000184 016f      	MOVW R12,R30
000185 24aa      	CLR  R10
000186 24bb      	CLR  R11
                 ; 0000 007A 
                 ; 0000 007B            if(m==59)
000187 e3eb      	LDI  R30,LOW(59)
000188 e0f0      	LDI  R31,HIGH(59)
000189 15ec      	CP   R30,R12
00018a 05fd      	CPC  R31,R13
00018b f421      	BRNE _0x59
                 ; 0000 007C            {h++;m=0;}
00018c 940e 04de 	CALL SUBOPT_0x6
00018e 24cc      	CLR  R12
00018f 24dd      	CLR  R13
                 ; 0000 007D 
                 ; 0000 007E            if(h==23)
                 _0x59:
000190 91a0 016e 	LDS  R26,_h
000192 91b0 016f 	LDS  R27,_h+1
000194 9757      	SBIW R26,23
000195 f449      	BRNE _0x5A
                 ; 0000 007F            {h=0;m=0;s=0;}
000196 e0e0      	LDI  R30,LOW(0)
000197 93e0 016e 	STS  _h,R30
000199 93e0 016f 	STS  _h+1,R30
00019b 24cc      	CLR  R12
00019c 24dd      	CLR  R13
00019d 24aa      	CLR  R10
00019e 24bb      	CLR  R11
                 ; 0000 0080            }
                 _0x5A:
                 ; 0000 0081            if(PINB.2==0)
                 _0x58:
00019f 99b2      	SBIC 0x16,2
0001a0 c003      	RJMP _0x5B
                 ; 0000 0082            m++;
0001a1 01f6      	MOVW R30,R12
0001a2 9631      	ADIW R30,1
0001a3 016f      	MOVW R12,R30
                 ; 0000 0083            if(PINB.3==0)
                 _0x5B:
0001a4 99b3      	SBIC 0x16,3
0001a5 c002      	RJMP _0x5C
                 ; 0000 0084            h++;
0001a6 940e 04de 	CALL SUBOPT_0x6
                 ; 0000 0085            if(PINB.4==0)
                 _0x5C:
0001a8 99b4      	SBIC 0x16,4
0001a9 c004      	RJMP _0x5D
                 ; 0000 0086            motor++;
0001aa e7a0      	LDI  R26,LOW(_motor)
0001ab e0b1      	LDI  R27,HIGH(_motor)
0001ac 940e 04e6 	CALL SUBOPT_0x7
                 ; 0000 0087            lcd_clear();
                 _0x5D:
0001ae 940e 041a 	CALL _lcd_clear
                 ; 0000 0088 
                 ; 0000 0089            lcd_gotoxy(10,0);
0001b0 e0ea      	LDI  R30,LOW(10)
0001b1 940e 04b5 	CALL SUBOPT_0x0
                 ; 0000 008A            lcd_puts(temp);
0001b3 e8ac      	LDI  R26,LOW(_temp)
0001b4 e0b1      	LDI  R27,HIGH(_temp)
0001b5 940e 0448 	CALL _lcd_puts
                 ; 0000 008B 
                 ; 0000 008C            lcd_gotoxy(0,0);
0001b7 e0e0      	LDI  R30,LOW(0)
0001b8 940e 04b5 	CALL SUBOPT_0x0
                 ; 0000 008D            sprintf(wa,"%d:%d:%d",h,m,s);
0001ba e7ed      	LDI  R30,LOW(_wa)
0001bb e0f1      	LDI  R31,HIGH(_wa)
0001bc 93fa      	ST   -Y,R31
0001bd 93ea      	ST   -Y,R30
                +
0001be e7e9     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0001bf e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0001c0 93fa      	ST   -Y,R31
0001c1 93ea      	ST   -Y,R30
0001c2 91e0 016e 	LDS  R30,_h
0001c4 91f0 016f 	LDS  R31,_h+1
0001c6 940e 04ec 	CALL SUBOPT_0x8
0001c8 01f6      	MOVW R30,R12
0001c9 940e 04ec 	CALL SUBOPT_0x8
0001cb 01f5      	MOVW R30,R10
0001cc 940e 04ec 	CALL SUBOPT_0x8
0001ce e08c      	LDI  R24,12
0001cf 940e 03b5 	CALL _sprintf
0001d1 9660      	ADIW R28,16
                 ; 0000 008E            lcd_puts(wa);
0001d2 e7ad      	LDI  R26,LOW(_wa)
0001d3 e0b1      	LDI  R27,HIGH(_wa)
0001d4 940e 0448 	CALL _lcd_puts
                 ; 0000 008F 
                 ; 0000 0090            lcd_gotoxy(0,1);
0001d6 e0e0      	LDI  R30,LOW(0)
0001d7 940e 04b9 	CALL SUBOPT_0x1
                 ; 0000 0091            sprintf(mo,"rpm:%d",motor);
0001d9 e8e7      	LDI  R30,LOW(_mo)
0001da e0f1      	LDI  R31,HIGH(_mo)
0001db 93fa      	ST   -Y,R31
0001dc 93ea      	ST   -Y,R30
                +
0001dd e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0001de e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0001df 93fa      	ST   -Y,R31
0001e0 93ea      	ST   -Y,R30
0001e1 91e0 0170 	LDS  R30,_motor
0001e3 91f0 0171 	LDS  R31,_motor+1
0001e5 940e 04d5 	CALL SUBOPT_0x5
                 ; 0000 0092            lcd_puts(mo);
0001e7 e8a7      	LDI  R26,LOW(_mo)
0001e8 e0b1      	LDI  R27,HIGH(_mo)
0001e9 940e 0448 	CALL _lcd_puts
                 ; 0000 0093 
                 ; 0000 0094            delay_ms(1000);
0001eb eea8      	LDI  R26,LOW(1000)
0001ec e0b3      	LDI  R27,HIGH(1000)
0001ed 940e 052b 	CALL _delay_ms
                 ; 0000 0095            id=1;
0001ef e0e1      	LDI  R30,LOW(1)
0001f0 e0f0      	LDI  R31,HIGH(1)
0001f1 012f      	MOVW R4,R30
                 ; 0000 0096            p=3;
0001f2 e0e3      	LDI  R30,LOW(3)
0001f3 e0f0      	LDI  R31,HIGH(3)
0001f4 013f      	MOVW R6,R30
                 ; 0000 0097           }
0001f5 cf73      	RJMP _0x51
                 _0x53:
                 ; 0000 0098 
                 ; 0000 0099           while((id!=1)&&(p!=3)||(mo[4]=='0'))
                 _0x5E:
0001f6 e0e1      	LDI  R30,LOW(1)
0001f7 e0f0      	LDI  R31,HIGH(1)
0001f8 15e4      	CP   R30,R4
0001f9 05f5      	CPC  R31,R5
0001fa f029      	BREQ _0x61
0001fb e0e3      	LDI  R30,LOW(3)
0001fc e0f0      	LDI  R31,HIGH(3)
0001fd 15e6      	CP   R30,R6
0001fe 05f7      	CPC  R31,R7
0001ff f421      	BRNE _0x63
                 _0x61:
                +
000200 91a0 018b+LDS R26 , _mo + ( 4 )
                 	__GETB2MN _mo,4
000202 33a0      	CPI  R26,LOW(0x30)
000203 f451      	BRNE _0x60
                 _0x63:
                 ; 0000 009A           {
                 ; 0000 009B 
                 ; 0000 009C            PORTB=0x02;
000204 e0e2      	LDI  R30,LOW(2)
000205 bbe8      	OUT  0x18,R30
                 ; 0000 009D            lcd_gotoxy(0,0);
000206 e0e0      	LDI  R30,LOW(0)
000207 940e 04b5 	CALL SUBOPT_0x0
                 ; 0000 009E            lcd_puts("error");
                +
000209 e6a8     +LDI R26 , LOW ( _0x3E + ( 8 ) )
00020a e0b1     +LDI R27 , HIGH ( _0x3E + ( 8 ) )
                 	__POINTW2MN _0x3E,8
00020b 940e 0448 	CALL _lcd_puts
                 ; 0000 009F            }
00020d cfe8      	RJMP _0x5E
                 _0x60:
                 ; 0000 00A0 }
00020e cee9      	RJMP _0x3B
                 ; 0000 00A1 }
                 _0x65:
00020f cfff      	RJMP _0x65
                 ; .FEND
                 
                 	.DSEG
                 _0x3E:
000160           	.BYTE 0xE
                 
                 	.CSEG
                 _atoi:
                 ; .FSTART _atoi
000210 93ba      	ST   -Y,R27
000211 93aa      	ST   -Y,R26
000212 81b9         	ldd  r27,y+1
000213 81a8         	ld   r26,y
                 __atoi0:
000214 91ec         	ld   r30,x
000215 2f8a              mov  r24,r26
000216 2fae      	MOV  R26,R30
000217 940e 0491 	CALL _isspace
000219 2fa8              mov  r26,r24
00021a 23ee         	tst  r30
00021b f011         	breq __atoi1
00021c 9611         	adiw r26,1
00021d cff6         	rjmp __atoi0
                 __atoi1:
00021e 94e8         	clt
00021f 91ec         	ld   r30,x
000220 32ed         	cpi  r30,'-'
000221 f411         	brne __atoi2
000222 9468         	set
000223 c002         	rjmp __atoi3
                 __atoi2:
000224 32eb         	cpi  r30,'+'
000225 f409         	brne __atoi4
                 __atoi3:
000226 9611         	adiw r26,1
                 __atoi4:
000227 2766         	clr  r22
000228 2777         	clr  r23
                 __atoi5:
000229 91ec         	ld   r30,x
00022a 2f8a              mov  r24,r26
00022b 2fae      	MOV  R26,R30
00022c 940e 0488 	CALL _isdigit
00022e 2fa8              mov  r26,r24
00022f 23ee         	tst  r30
000230 f079         	breq __atoi6
000231 01fb         	movw r30,r22
000232 0f66         	lsl  r22
000233 1f77         	rol  r23
000234 0f66         	lsl  r22
000235 1f77         	rol  r23
000236 0f6e         	add  r22,r30
000237 1f7f         	adc  r23,r31
000238 0f66         	lsl  r22
000239 1f77         	rol  r23
00023a 91ed         	ld   r30,x+
00023b 27ff         	clr  r31
00023c 53e0         	subi r30,'0'
00023d 0f6e         	add  r22,r30
00023e 1f7f         	adc  r23,r31
00023f cfe9         	rjmp __atoi5
                 __atoi6:
000240 01fb         	movw r30,r22
000241 f41e         	brtc __atoi7
000242 95e0         	com  r30
000243 95f0         	com  r31
000244 9631         	adiw r30,1
                 __atoi7:
000245 9622         	adiw r28,2
000246 9508         	ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000247 93ba      	ST   -Y,R27
000248 93aa      	ST   -Y,R26
000249 931a      	ST   -Y,R17
00024a 930a      	ST   -Y,R16
00024b 81aa      	LDD  R26,Y+2
00024c 81bb      	LDD  R27,Y+2+1
00024d 9612      	ADIW R26,2
00024e 940e 0542 	CALL __GETW1P
000250 9730      	SBIW R30,0
000251 f129      	BREQ _0x2020010
000252 81aa      	LDD  R26,Y+2
000253 81bb      	LDD  R27,Y+2+1
000254 9614      	ADIW R26,4
000255 940e 0542 	CALL __GETW1P
000257 018f      	MOVW R16,R30
000258 9730      	SBIW R30,0
000259 f061      	BREQ _0x2020012
                +
00025a 3002     +CPI R16 , LOW ( 2 )
00025b e0e0     +LDI R30 , HIGH ( 2 )
00025c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00025d f080      	BRLO _0x2020013
00025e 01f8      	MOVW R30,R16
00025f 9731      	SBIW R30,1
000260 018f      	MOVW R16,R30
                +
000261 81aa     +LDD R26 , Y + 2
000262 81bb     +LDD R27 , Y + 2 + 1
000263 9614     +ADIW R26 , 4
000264 93ed     +ST X + , R30
000265 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000266 81aa      	LDD  R26,Y+2
000267 81bb      	LDD  R27,Y+2+1
000268 9612      	ADIW R26,2
000269 940e 04e6 	CALL SUBOPT_0x7
00026b 9731      	SBIW R30,1
00026c 81ac      	LDD  R26,Y+4
00026d 83a0      	STD  Z+0,R26
                 _0x2020013:
00026e 81aa      	LDD  R26,Y+2
00026f 81bb      	LDD  R27,Y+2+1
000270 940e 0542 	CALL __GETW1P
000272 23ff      	TST  R31
000273 f012      	BRMI _0x2020014
000274 940e 04e6 	CALL SUBOPT_0x7
                 _0x2020014:
000276 c006      	RJMP _0x2020015
                 _0x2020010:
000277 81aa      	LDD  R26,Y+2
000278 81bb      	LDD  R27,Y+2+1
000279 efef      	LDI  R30,LOW(65535)
00027a efff      	LDI  R31,HIGH(65535)
00027b 93ed      	ST   X+,R30
00027c 93fc      	ST   X,R31
                 _0x2020015:
00027d 8119      	LDD  R17,Y+1
00027e 8108      	LDD  R16,Y+0
00027f 9625      	ADIW R28,5
000280 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000281 93ba      	ST   -Y,R27
000282 93aa      	ST   -Y,R26
000283 9726      	SBIW R28,6
000284 940e 054f 	CALL __SAVELOCR6
000286 e010      	LDI  R17,0
000287 85ac      	LDD  R26,Y+12
000288 85bd      	LDD  R27,Y+12+1
000289 e0e0      	LDI  R30,LOW(0)
00028a e0f0      	LDI  R31,HIGH(0)
00028b 93ed      	ST   X+,R30
00028c 93fc      	ST   X,R31
                 _0x2020016:
00028d 89ea      	LDD  R30,Y+18
00028e 89fb      	LDD  R31,Y+18+1
00028f 9631      	ADIW R30,1
000290 8bea      	STD  Y+18,R30
000291 8bfb      	STD  Y+18+1,R31
000292 9731      	SBIW R30,1
000293 91e4      	LPM  R30,Z
000294 2f2e      	MOV  R18,R30
000295 30e0      	CPI  R30,0
000296 f409      	BRNE PC+2
000297 c115      	RJMP _0x2020018
000298 2fe1      	MOV  R30,R17
000299 30e0      	CPI  R30,0
00029a f439      	BRNE _0x202001C
00029b 3225      	CPI  R18,37
00029c f411      	BRNE _0x202001D
00029d e011      	LDI  R17,LOW(1)
00029e c002      	RJMP _0x202001E
                 _0x202001D:
00029f 940e 04f1 	CALL SUBOPT_0x9
                 _0x202001E:
0002a1 c10a      	RJMP _0x202001B
                 _0x202001C:
0002a2 30e1      	CPI  R30,LOW(0x1)
0002a3 f4a9      	BRNE _0x202001F
0002a4 3225      	CPI  R18,37
0002a5 f419      	BRNE _0x2020020
0002a6 940e 04f1 	CALL SUBOPT_0x9
0002a8 c102      	RJMP _0x20200CC
                 _0x2020020:
0002a9 e012      	LDI  R17,LOW(2)
0002aa e040      	LDI  R20,LOW(0)
0002ab e000      	LDI  R16,LOW(0)
0002ac 322d      	CPI  R18,45
0002ad f411      	BRNE _0x2020021
0002ae e001      	LDI  R16,LOW(1)
0002af c0fc      	RJMP _0x202001B
                 _0x2020021:
0002b0 322b      	CPI  R18,43
0002b1 f411      	BRNE _0x2020022
0002b2 e24b      	LDI  R20,LOW(43)
0002b3 c0f8      	RJMP _0x202001B
                 _0x2020022:
0002b4 3220      	CPI  R18,32
0002b5 f411      	BRNE _0x2020023
0002b6 e240      	LDI  R20,LOW(32)
0002b7 c0f4      	RJMP _0x202001B
                 _0x2020023:
0002b8 c002      	RJMP _0x2020024
                 _0x202001F:
0002b9 30e2      	CPI  R30,LOW(0x2)
0002ba f439      	BRNE _0x2020025
                 _0x2020024:
0002bb e050      	LDI  R21,LOW(0)
0002bc e013      	LDI  R17,LOW(3)
0002bd 3320      	CPI  R18,48
0002be f411      	BRNE _0x2020026
0002bf 6800      	ORI  R16,LOW(128)
0002c0 c0eb      	RJMP _0x202001B
                 _0x2020026:
0002c1 c003      	RJMP _0x2020027
                 _0x2020025:
0002c2 30e3      	CPI  R30,LOW(0x3)
0002c3 f009      	BREQ PC+2
0002c4 c0e7      	RJMP _0x202001B
                 _0x2020027:
0002c5 3320      	CPI  R18,48
0002c6 f010      	BRLO _0x202002A
0002c7 332a      	CPI  R18,58
0002c8 f008      	BRLO _0x202002B
                 _0x202002A:
0002c9 c007      	RJMP _0x2020029
                 _0x202002B:
0002ca e0aa      	LDI  R26,LOW(10)
0002cb 9f5a      	MUL  R21,R26
0002cc 2d50      	MOV  R21,R0
0002cd 2fe2      	MOV  R30,R18
0002ce 53e0      	SUBI R30,LOW(48)
0002cf 0f5e      	ADD  R21,R30
0002d0 c0db      	RJMP _0x202001B
                 _0x2020029:
0002d1 2fe2      	MOV  R30,R18
0002d2 36e3      	CPI  R30,LOW(0x63)
0002d3 f449      	BRNE _0x202002F
0002d4 940e 04f8 	CALL SUBOPT_0xA
0002d6 89e8      	LDD  R30,Y+16
0002d7 89f9      	LDD  R31,Y+16+1
0002d8 81a4      	LDD  R26,Z+4
0002d9 93aa      	ST   -Y,R26
0002da 940e 04fe 	CALL SUBOPT_0xB
0002dc c0ce      	RJMP _0x2020030
                 _0x202002F:
0002dd 37e3      	CPI  R30,LOW(0x73)
0002de f441      	BRNE _0x2020032
0002df 940e 04f8 	CALL SUBOPT_0xA
0002e1 940e 0504 	CALL SUBOPT_0xC
0002e3 940e 049c 	CALL _strlen
0002e5 2f1e      	MOV  R17,R30
0002e6 c00a      	RJMP _0x2020033
                 _0x2020032:
0002e7 37e0      	CPI  R30,LOW(0x70)
0002e8 f461      	BRNE _0x2020035
0002e9 940e 04f8 	CALL SUBOPT_0xA
0002eb 940e 0504 	CALL SUBOPT_0xC
0002ed 940e 04a8 	CALL _strlenf
0002ef 2f1e      	MOV  R17,R30
0002f0 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0002f1 6002      	ORI  R16,LOW(2)
0002f2 770f      	ANDI R16,LOW(127)
0002f3 e030      	LDI  R19,LOW(0)
0002f4 c034      	RJMP _0x2020036
                 _0x2020035:
0002f5 36e4      	CPI  R30,LOW(0x64)
0002f6 f011      	BREQ _0x2020039
0002f7 36e9      	CPI  R30,LOW(0x69)
0002f8 f411      	BRNE _0x202003A
                 _0x2020039:
0002f9 6004      	ORI  R16,LOW(4)
0002fa c002      	RJMP _0x202003B
                 _0x202003A:
0002fb 37e5      	CPI  R30,LOW(0x75)
0002fc f431      	BRNE _0x202003C
                 _0x202003B:
0002fd e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0002fe e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0002ff 83ee      	STD  Y+6,R30
000300 83ff      	STD  Y+6+1,R31
000301 e015      	LDI  R17,LOW(5)
000302 c00c      	RJMP _0x202003D
                 _0x202003C:
000303 35e8      	CPI  R30,LOW(0x58)
000304 f411      	BRNE _0x202003F
000305 6008      	ORI  R16,LOW(8)
000306 c003      	RJMP _0x2020040
                 _0x202003F:
000307 37e8      	CPI  R30,LOW(0x78)
000308 f009      	BREQ PC+2
000309 c0a1      	RJMP _0x2020071
                 _0x2020040:
00030a e5ee      	LDI  R30,LOW(_tbl16_G101*2)
00030b e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00030c 83ee      	STD  Y+6,R30
00030d 83ff      	STD  Y+6+1,R31
00030e e014      	LDI  R17,LOW(4)
                 _0x202003D:
00030f ff02      	SBRS R16,2
000310 c014      	RJMP _0x2020042
000311 940e 04f8 	CALL SUBOPT_0xA
000313 940e 050e 	CALL SUBOPT_0xD
000315 85ab      	LDD  R26,Y+11
000316 23aa      	TST  R26
000317 f43a      	BRPL _0x2020043
000318 85ea      	LDD  R30,Y+10
000319 85fb      	LDD  R31,Y+10+1
00031a 940e 0539 	CALL __ANEGW1
00031c 87ea      	STD  Y+10,R30
00031d 87fb      	STD  Y+10+1,R31
00031e e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00031f 3040      	CPI  R20,0
000320 f011      	BREQ _0x2020044
000321 5f1f      	SUBI R17,-LOW(1)
000322 c001      	RJMP _0x2020045
                 _0x2020044:
000323 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000324 c004      	RJMP _0x2020046
                 _0x2020042:
000325 940e 04f8 	CALL SUBOPT_0xA
000327 940e 050e 	CALL SUBOPT_0xD
                 _0x2020046:
                 _0x2020036:
000329 fd00      	SBRC R16,0
00032a c011      	RJMP _0x2020047
                 _0x2020048:
00032b 1715      	CP   R17,R21
00032c f478      	BRSH _0x202004A
00032d ff07      	SBRS R16,7
00032e c008      	RJMP _0x202004B
00032f ff02      	SBRS R16,2
000330 c004      	RJMP _0x202004C
000331 7f0b      	ANDI R16,LOW(251)
000332 2f24      	MOV  R18,R20
000333 5011      	SUBI R17,LOW(1)
000334 c001      	RJMP _0x202004D
                 _0x202004C:
000335 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000336 c001      	RJMP _0x202004E
                 _0x202004B:
000337 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000338 940e 04f1 	CALL SUBOPT_0x9
00033a 5051      	SUBI R21,LOW(1)
00033b cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00033c 2f31      	MOV  R19,R17
00033d ff01      	SBRS R16,1
00033e c017      	RJMP _0x202004F
                 _0x2020050:
00033f 3030      	CPI  R19,0
000340 f0a1      	BREQ _0x2020052
000341 ff03      	SBRS R16,3
000342 c006      	RJMP _0x2020053
000343 81ee      	LDD  R30,Y+6
000344 81ff      	LDD  R31,Y+6+1
000345 9125      	LPM  R18,Z+
000346 83ee      	STD  Y+6,R30
000347 83ff      	STD  Y+6+1,R31
000348 c005      	RJMP _0x2020054
                 _0x2020053:
000349 81ae      	LDD  R26,Y+6
00034a 81bf      	LDD  R27,Y+6+1
00034b 912d      	LD   R18,X+
00034c 83ae      	STD  Y+6,R26
00034d 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00034e 940e 04f1 	CALL SUBOPT_0x9
000350 3050      	CPI  R21,0
000351 f009      	BREQ _0x2020055
000352 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000353 5031      	SUBI R19,LOW(1)
000354 cfea      	RJMP _0x2020050
                 _0x2020052:
000355 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000356 e320      	LDI  R18,LOW(48)
000357 81ee      	LDD  R30,Y+6
000358 81ff      	LDD  R31,Y+6+1
000359 940e 0546 	CALL __GETW1PF
00035b 87e8      	STD  Y+8,R30
00035c 87f9      	STD  Y+8+1,R31
00035d 81ee      	LDD  R30,Y+6
00035e 81ff      	LDD  R31,Y+6+1
00035f 9632      	ADIW R30,2
000360 83ee      	STD  Y+6,R30
000361 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000362 85e8      	LDD  R30,Y+8
000363 85f9      	LDD  R31,Y+8+1
000364 85aa      	LDD  R26,Y+10
000365 85bb      	LDD  R27,Y+10+1
000366 17ae      	CP   R26,R30
000367 07bf      	CPC  R27,R31
000368 f050      	BRLO _0x202005C
000369 5f2f      	SUBI R18,-LOW(1)
00036a 85a8      	LDD  R26,Y+8
00036b 85b9      	LDD  R27,Y+8+1
00036c 85ea      	LDD  R30,Y+10
00036d 85fb      	LDD  R31,Y+10+1
00036e 1bea      	SUB  R30,R26
00036f 0bfb      	SBC  R31,R27
000370 87ea      	STD  Y+10,R30
000371 87fb      	STD  Y+10+1,R31
000372 cfef      	RJMP _0x202005A
                 _0x202005C:
000373 332a      	CPI  R18,58
000374 f028      	BRLO _0x202005D
000375 ff03      	SBRS R16,3
000376 c002      	RJMP _0x202005E
000377 5f29      	SUBI R18,-LOW(7)
000378 c001      	RJMP _0x202005F
                 _0x202005E:
000379 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00037a fd04      	SBRC R16,4
00037b c01a      	RJMP _0x2020061
00037c 3321      	CPI  R18,49
00037d f420      	BRSH _0x2020063
00037e 85a8      	LDD  R26,Y+8
00037f 85b9      	LDD  R27,Y+8+1
000380 9711      	SBIW R26,1
000381 f409      	BRNE _0x2020062
                 _0x2020063:
000382 c009      	RJMP _0x20200CD
                 _0x2020062:
000383 1753      	CP   R21,R19
000384 f010      	BRLO _0x2020067
000385 ff00      	SBRS R16,0
000386 c001      	RJMP _0x2020068
                 _0x2020067:
000387 c013      	RJMP _0x2020066
                 _0x2020068:
000388 e220      	LDI  R18,LOW(32)
000389 ff07      	SBRS R16,7
00038a c00b      	RJMP _0x2020069
00038b e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00038c 6100      	ORI  R16,LOW(16)
00038d ff02      	SBRS R16,2
00038e c007      	RJMP _0x202006A
00038f 7f0b      	ANDI R16,LOW(251)
000390 934a      	ST   -Y,R20
000391 940e 04fe 	CALL SUBOPT_0xB
000393 3050      	CPI  R21,0
000394 f009      	BREQ _0x202006B
000395 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000396 940e 04f1 	CALL SUBOPT_0x9
000398 3050      	CPI  R21,0
000399 f009      	BREQ _0x202006C
00039a 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00039b 5031      	SUBI R19,LOW(1)
00039c 85a8      	LDD  R26,Y+8
00039d 85b9      	LDD  R27,Y+8+1
00039e 9712      	SBIW R26,2
00039f f008      	BRLO _0x2020059
0003a0 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0003a1 ff00      	SBRS R16,0
0003a2 c008      	RJMP _0x202006D
                 _0x202006E:
0003a3 3050      	CPI  R21,0
0003a4 f031      	BREQ _0x2020070
0003a5 5051      	SUBI R21,LOW(1)
0003a6 e2e0      	LDI  R30,LOW(32)
0003a7 93ea      	ST   -Y,R30
0003a8 940e 04fe 	CALL SUBOPT_0xB
0003aa cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0003ab e010      	LDI  R17,LOW(0)
                 _0x202001B:
0003ac cee0      	RJMP _0x2020016
                 _0x2020018:
0003ad 85ac      	LDD  R26,Y+12
0003ae 85bd      	LDD  R27,Y+12+1
0003af 940e 0542 	CALL __GETW1P
0003b1 940e 0556 	CALL __LOADLOCR6
0003b3 9664      	ADIW R28,20
0003b4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003b5 92ff      	PUSH R15
0003b6 2ef8      	MOV  R15,R24
0003b7 9726      	SBIW R28,6
0003b8 940e 0551 	CALL __SAVELOCR4
0003ba 940e 0516 	CALL SUBOPT_0xE
0003bc 9730      	SBIW R30,0
0003bd f419      	BRNE _0x2020072
0003be efef      	LDI  R30,LOW(65535)
0003bf efff      	LDI  R31,HIGH(65535)
0003c0 c023      	RJMP _0x20C0002
                 _0x2020072:
0003c1 01de      	MOVW R26,R28
0003c2 9616      	ADIW R26,6
0003c3 940e 0535 	CALL __ADDW2R15
0003c5 018d      	MOVW R16,R26
0003c6 940e 0516 	CALL SUBOPT_0xE
0003c8 83ee      	STD  Y+6,R30
0003c9 83ff      	STD  Y+6+1,R31
0003ca e0e0      	LDI  R30,LOW(0)
0003cb 87e8      	STD  Y+8,R30
0003cc 87e9      	STD  Y+8+1,R30
0003cd 01de      	MOVW R26,R28
0003ce 961a      	ADIW R26,10
0003cf 940e 0535 	CALL __ADDW2R15
0003d1 940e 0542 	CALL __GETW1P
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
0003d5 931a      	ST   -Y,R17
0003d6 930a      	ST   -Y,R16
0003d7 e4e7      	LDI  R30,LOW(_put_buff_G101)
0003d8 e0f2      	LDI  R31,HIGH(_put_buff_G101)
0003d9 93fa      	ST   -Y,R31
0003da 93ea      	ST   -Y,R30
0003db 01de      	MOVW R26,R28
0003dc 961a      	ADIW R26,10
0003dd dea3      	RCALL __print_G101
0003de 019f      	MOVW R18,R30
0003df 81ae      	LDD  R26,Y+6
0003e0 81bf      	LDD  R27,Y+6+1
0003e1 e0e0      	LDI  R30,LOW(0)
0003e2 93ec      	ST   X,R30
0003e3 01f9      	MOVW R30,R18
                 _0x20C0002:
0003e4 940e 0558 	CALL __LOADLOCR4
0003e6 962a      	ADIW R28,10
0003e7 90ff      	POP  R15
0003e8 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
0003e9 93aa      	ST   -Y,R26
0003ea b3eb      	IN   R30,0x1B
0003eb 70ef      	ANDI R30,LOW(0xF)
0003ec 2fae      	MOV  R26,R30
0003ed 81e8      	LD   R30,Y
0003ee 7fe0      	ANDI R30,LOW(0xF0)
0003ef 2bea      	OR   R30,R26
0003f0 bbeb      	OUT  0x1B,R30
                +
0003f1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003f2 958a     +DEC R24
0003f3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003f4 9ada      	SBI  0x1B,2
                +
0003f5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003f6 958a     +DEC R24
0003f7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003f8 98da      	CBI  0x1B,2
                +
0003f9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003fa 958a     +DEC R24
0003fb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003fc c089      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0003fd 93aa      	ST   -Y,R26
0003fe 81a8      	LD   R26,Y
0003ff dfe9      	RCALL __lcd_write_nibble_G102
000400 81e8          ld    r30,y
000401 95e2          swap  r30
000402 83e8          st    y,r30
000403 81a8      	LD   R26,Y
000404 dfe4      	RCALL __lcd_write_nibble_G102
                +
000405 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000406 958a     +DEC R24
000407 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000408 c07d      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000409 93aa      	ST   -Y,R26
00040a 81e8      	LD   R30,Y
00040b e0f0      	LDI  R31,0
00040c 56eb      	SUBI R30,LOW(-__base_y_G102)
00040d 4ffe      	SBCI R31,HIGH(-__base_y_G102)
00040e 81e0      	LD   R30,Z
00040f 81a9      	LDD  R26,Y+1
000410 0fae      	ADD  R26,R30
000411 dfeb      	RCALL __lcd_write_data
000412 81e9      	LDD  R30,Y+1
000413 93e0 0199 	STS  __lcd_x,R30
000415 81e8      	LD   R30,Y
000416 93e0 019a 	STS  __lcd_y,R30
000418 9622      	ADIW R28,2
000419 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00041a e0a2      	LDI  R26,LOW(2)
00041b 940e 051d 	CALL SUBOPT_0xF
00041d e0ac      	LDI  R26,LOW(12)
00041e dfde      	RCALL __lcd_write_data
00041f e0a1      	LDI  R26,LOW(1)
000420 940e 051d 	CALL SUBOPT_0xF
000422 e0e0      	LDI  R30,LOW(0)
000423 93e0 019a 	STS  __lcd_y,R30
000425 93e0 0199 	STS  __lcd_x,R30
000427 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000428 93aa      	ST   -Y,R26
000429 81a8      	LD   R26,Y
00042a 30aa      	CPI  R26,LOW(0xA)
00042b f031      	BREQ _0x2040005
00042c 91e0 019b 	LDS  R30,__lcd_maxx
00042e 91a0 0199 	LDS  R26,__lcd_x
000430 17ae      	CP   R26,R30
000431 f060      	BRLO _0x2040004
                 _0x2040005:
000432 e0e0      	LDI  R30,LOW(0)
000433 93ea      	ST   -Y,R30
000434 91a0 019a 	LDS  R26,__lcd_y
000436 5faf      	SUBI R26,-LOW(1)
000437 93a0 019a 	STS  __lcd_y,R26
000439 dfcf      	RCALL _lcd_gotoxy
00043a 81a8      	LD   R26,Y
00043b 30aa      	CPI  R26,LOW(0xA)
00043c f409      	BRNE _0x2040007
00043d c048      	RJMP _0x20C0001
                 _0x2040007:
                 _0x2040004:
00043e 91e0 0199 	LDS  R30,__lcd_x
000440 5fef      	SUBI R30,-LOW(1)
000441 93e0 0199 	STS  __lcd_x,R30
000443 9ad8      	SBI  0x1B,0
000444 81a8      	LD   R26,Y
000445 dfb7      	RCALL __lcd_write_data
000446 98d8      	CBI  0x1B,0
000447 c03e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000448 93ba      	ST   -Y,R27
000449 93aa      	ST   -Y,R26
00044a 931a      	ST   -Y,R17
                 _0x2040008:
00044b 81a9      	LDD  R26,Y+1
00044c 81ba      	LDD  R27,Y+1+1
00044d 91ed      	LD   R30,X+
00044e 83a9      	STD  Y+1,R26
00044f 83ba      	STD  Y+1+1,R27
000450 2f1e      	MOV  R17,R30
000451 30e0      	CPI  R30,0
000452 f019      	BREQ _0x204000A
000453 2fa1      	MOV  R26,R17
000454 dfd3      	RCALL _lcd_putchar
000455 cff5      	RJMP _0x2040008
                 _0x204000A:
000456 8118      	LDD  R17,Y+0
000457 9623      	ADIW R28,3
000458 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000459 93aa      	ST   -Y,R26
00045a b3ea      	IN   R30,0x1A
00045b 6fe0      	ORI  R30,LOW(0xF0)
00045c bbea      	OUT  0x1A,R30
00045d 9ad2      	SBI  0x1A,2
00045e 9ad0      	SBI  0x1A,0
00045f 9ad1      	SBI  0x1A,1
000460 98da      	CBI  0x1B,2
000461 98d8      	CBI  0x1B,0
000462 98d9      	CBI  0x1B,1
000463 81e8      	LD   R30,Y
000464 93e0 019b 	STS  __lcd_maxx,R30
000466 58e0      	SUBI R30,-LOW(128)
                +
000467 93e0 0197+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000469 81e8      	LD   R30,Y
00046a 54e0      	SUBI R30,-LOW(192)
                +
00046b 93e0 0198+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
00046d e1a4      	LDI  R26,LOW(20)
00046e e0b0      	LDI  R27,0
00046f 940e 052b 	CALL _delay_ms
000471 940e 0523 	CALL SUBOPT_0x10
000473 940e 0523 	CALL SUBOPT_0x10
000475 940e 0523 	CALL SUBOPT_0x10
000477 e2a0      	LDI  R26,LOW(32)
000478 df70      	RCALL __lcd_write_nibble_G102
                +
000479 ec88     +LDI R24 , LOW ( 200 )
00047a e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00047b 9701     +SBIW R24 , 1
00047c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00047d e2a8      	LDI  R26,LOW(40)
00047e df7e      	RCALL __lcd_write_data
00047f e0a4      	LDI  R26,LOW(4)
000480 df7c      	RCALL __lcd_write_data
000481 e8a5      	LDI  R26,LOW(133)
000482 df7a      	RCALL __lcd_write_data
000483 e0a6      	LDI  R26,LOW(6)
000484 df78      	RCALL __lcd_write_data
000485 df94      	RCALL _lcd_clear
                 _0x20C0001:
000486 9621      	ADIW R28,1
000487 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000488 93aa      	ST   -Y,R26
000489 e0e1          ldi  r30,1
00048a 91f9          ld   r31,y+
00048b 33f0          cpi  r31,'0'
00048c f010          brlo isdigit0
00048d 33fa          cpi  r31,'9'+1
00048e f008          brlo isdigit1
                 isdigit0:
00048f 27ee          clr  r30
                 isdigit1:
000490 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000491 93aa      	ST   -Y,R26
000492 e0e1          ldi  r30,1
000493 91f9          ld   r31,y+
000494 32f0          cpi  r31,' '
000495 f029          breq isspace1
000496 30f9          cpi  r31,9
000497 f010          brlo isspace0
000498 30fe          cpi  r31,13+1
000499 f008          brlo isspace1
                 isspace0:
00049a 27ee          clr  r30
                 isspace1:
00049b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00049c 93ba      	ST   -Y,R27
00049d 93aa      	ST   -Y,R26
00049e 91a9          ld   r26,y+
00049f 91b9          ld   r27,y+
0004a0 27ee          clr  r30
0004a1 27ff          clr  r31
                 strlen0:
0004a2 916d          ld   r22,x+
0004a3 2366          tst  r22
0004a4 f011          breq strlen1
0004a5 9631          adiw r30,1
0004a6 cffb          rjmp strlen0
                 strlen1:
0004a7 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004a8 93ba      	ST   -Y,R27
0004a9 93aa      	ST   -Y,R26
0004aa 27aa          clr  r26
0004ab 27bb          clr  r27
0004ac 91e9          ld   r30,y+
0004ad 91f9          ld   r31,y+
                 strlenf0:
0004ae 9005      	lpm  r0,z+
0004af 2000          tst  r0
0004b0 f011          breq strlenf1
0004b1 9611          adiw r26,1
0004b2 cffb          rjmp strlenf0
                 strlenf1:
0004b3 01fd          movw r30,r26
0004b4 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _h:
00016e           	.BYTE 0x2
                 _motor:
000170           	.BYTE 0x2
                 _key:
000172           	.BYTE 0x1
                 _x:
000173           	.BYTE 0x4
                 _y:
000177           	.BYTE 0x4
                 _h1:
00017b           	.BYTE 0x1
                 _w1:
00017c           	.BYTE 0x1
                 _wa:
00017d           	.BYTE 0xA
                 _mo:
000187           	.BYTE 0x5
                 _temp:
00018c           	.BYTE 0x5
                 __seed_G100:
000191           	.BYTE 0x4
                 __base_y_G102:
000195           	.BYTE 0x4
                 __lcd_x:
000199           	.BYTE 0x1
                 __lcd_y:
00019a           	.BYTE 0x1
                 __lcd_maxx:
00019b           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0004b5 93ea      	ST   -Y,R30
0004b6 e0a0      	LDI  R26,LOW(0)
0004b7 940c 0409 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0004b9 93ea      	ST   -Y,R30
0004ba e0a1      	LDI  R26,LOW(1)
0004bb 940c 0409 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
0004bd 940e 0448 	CALL _lcd_puts
0004bf 940e 0095 	CALL _key_pad
0004c1 93e0 0172 	STS  _key,R30
0004c3 eea6      	LDI  R26,LOW(230)
0004c4 e0b0      	LDI  R27,0
0004c5 940c 052b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0004c7 01f4      	MOVW R30,R8
0004c8 9631      	ADIW R30,1
0004c9 014f      	MOVW R8,R30
0004ca e4ee      	LDI  R30,LOW(78)
0004cb 93e0 0172 	STS  _key,R30
0004cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0004ce 93fa      	ST   -Y,R31
0004cf 93ea      	ST   -Y,R30
                +
0004d0 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
0004d1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
0004d2 93fa      	ST   -Y,R31
0004d3 93ea      	ST   -Y,R30
0004d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
0004d5 940e 053d 	CALL __CWD1
0004d7 940e 054a 	CALL __PUTPARD1
0004d9 e084      	LDI  R24,4
0004da 940e 03b5 	CALL _sprintf
0004dc 9628      	ADIW R28,8
0004dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
0004de e6ae      	LDI  R26,LOW(_h)
0004df e0b1      	LDI  R27,HIGH(_h)
0004e0 91ed      	LD   R30,X+
0004e1 91fd      	LD   R31,X+
0004e2 9631      	ADIW R30,1
0004e3 93fe      	ST   -X,R31
0004e4 93ee      	ST   -X,R30
0004e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0004e6 91ed      	LD   R30,X+
0004e7 91fd      	LD   R31,X+
0004e8 9631      	ADIW R30,1
0004e9 93fe      	ST   -X,R31
0004ea 93ee      	ST   -X,R30
0004eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0004ec 940e 053d 	CALL __CWD1
0004ee 940e 054a 	CALL __PUTPARD1
0004f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9:
0004f1 932a      	ST   -Y,R18
0004f2 85ad      	LDD  R26,Y+13
0004f3 85be      	LDD  R27,Y+13+1
0004f4 85ef      	LDD  R30,Y+15
0004f5 89f8      	LDD  R31,Y+15+1
0004f6 9509      	ICALL
0004f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA:
0004f8 89e8      	LDD  R30,Y+16
0004f9 89f9      	LDD  R31,Y+16+1
0004fa 9734      	SBIW R30,4
0004fb 8be8      	STD  Y+16,R30
0004fc 8bf9      	STD  Y+16+1,R31
0004fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0004fe 85ad      	LDD  R26,Y+13
0004ff 85be      	LDD  R27,Y+13+1
000500 85ef      	LDD  R30,Y+15
000501 89f8      	LDD  R31,Y+15+1
000502 9509      	ICALL
000503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
000504 89a8      	LDD  R26,Y+16
000505 89b9      	LDD  R27,Y+16+1
000506 9614      	ADIW R26,4
000507 940e 0542 	CALL __GETW1P
000509 83ee      	STD  Y+6,R30
00050a 83ff      	STD  Y+6+1,R31
00050b 81ae      	LDD  R26,Y+6
00050c 81bf      	LDD  R27,Y+6+1
00050d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00050e 89a8      	LDD  R26,Y+16
00050f 89b9      	LDD  R27,Y+16+1
000510 9614      	ADIW R26,4
000511 940e 0542 	CALL __GETW1P
000513 87ea      	STD  Y+10,R30
000514 87fb      	STD  Y+10+1,R31
000515 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000516 01de      	MOVW R26,R28
000517 961c      	ADIW R26,12
000518 940e 0535 	CALL __ADDW2R15
00051a 940e 0542 	CALL __GETW1P
00051c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
00051d 940e 03fd 	CALL __lcd_write_data
00051f e0a3      	LDI  R26,LOW(3)
000520 e0b0      	LDI  R27,0
000521 940c 052b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10:
000523 e3a0      	LDI  R26,LOW(48)
000524 940e 03e9 	CALL __lcd_write_nibble_G102
                +
000526 ec88     +LDI R24 , LOW ( 200 )
000527 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000528 9701     +SBIW R24 , 1
000529 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00052a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00052b 9610      	adiw r26,0
00052c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00052d ed80     +LDI R24 , LOW ( 0x7D0 )
00052e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00052f 9701     +SBIW R24 , 1
000530 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000531 95a8      	wdr
000532 9711      	sbiw r26,1
000533 f7c9      	brne __delay_ms0
                 __delay_ms1:
000534 9508      	ret
                 
                 __ADDW2R15:
000535 2400      	CLR  R0
000536 0daf      	ADD  R26,R15
000537 1db0      	ADC  R27,R0
000538 9508      	RET
                 
                 __ANEGW1:
000539 95f1      	NEG  R31
00053a 95e1      	NEG  R30
00053b 40f0      	SBCI R31,0
00053c 9508      	RET
                 
                 __CWD1:
00053d 2f6f      	MOV  R22,R31
00053e 0f66      	ADD  R22,R22
00053f 0b66      	SBC  R22,R22
000540 2f76      	MOV  R23,R22
000541 9508      	RET
                 
                 __GETW1P:
000542 91ed      	LD   R30,X+
000543 91fc      	LD   R31,X
000544 9711      	SBIW R26,1
000545 9508      	RET
                 
                 __GETW1PF:
000546 9005      	LPM  R0,Z+
000547 91f4      	LPM  R31,Z
000548 2de0      	MOV  R30,R0
000549 9508      	RET
                 
                 __PUTPARD1:
00054a 937a      	ST   -Y,R23
00054b 936a      	ST   -Y,R22
00054c 93fa      	ST   -Y,R31
00054d 93ea      	ST   -Y,R30
00054e 9508      	RET
                 
                 __SAVELOCR6:
00054f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000550 934a      	ST   -Y,R20
                 __SAVELOCR4:
000551 933a      	ST   -Y,R19
                 __SAVELOCR3:
000552 932a      	ST   -Y,R18
                 __SAVELOCR2:
000553 931a      	ST   -Y,R17
000554 930a      	ST   -Y,R16
000555 9508      	RET
                 
                 __LOADLOCR6:
000556 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000557 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000558 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000559 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00055a 8119      	LDD  R17,Y+1
00055b 8108      	LD   R16,Y
00055c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   5 r7 :   2 
r8 :   6 r9 :   2 r10:   6 r11:   3 r12:   8 r13:   3 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  19 r23:   8 
r24:  28 r25:   5 r26: 151 r27:  53 r28:  16 r29:   1 r30: 281 r31:  96 
x  :  27 y  : 182 z  :  17 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   6 
adiw  :  33 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  25 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   0 brmi  :   1 brne  :  44 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  92 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  24 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :  10 cpc   :   8 cpi   :  50 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  26 ld    :  33 ldd   :  76 ldi   : 177 
lds   :  20 lpm   :  14 lsl   :   3 lsr   :   0 mov   :  22 movw  :  34 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  19 pop   :   1 push  :   1 rcall :  14 ret   :  48 
reti  :   0 rjmp  :  88 rol   :   3 ror   :   0 sbc   :   2 sbci  :   4 
sbi   :  20 sbic  :  16 sbis  :   3 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  72 std   :  33 sts   :  16 sub   :   1 subi  :  21 swap  :   1 
tst   :   6 wdr   :   1 
Instructions used: 60 out of 116 (51.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000aba   2622    124   2746   16384  16.8%
[.dseg] 0x000060 0x00019c      0     60     60    1024   5.9%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 15 warnings
